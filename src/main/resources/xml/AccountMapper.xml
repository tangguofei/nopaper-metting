<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.open.yun.ysmsvs.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.open.yun.ysmsvs.model.Account" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="TINYINT" />
    <result column="名称" property="名称" jdbcType="VARCHAR" />
    <result column="访问地址" property="访问地址" jdbcType="VARCHAR" />
    <result column="账号" property="账号" jdbcType="VARCHAR" />
    <result column="密码" property="密码" jdbcType="VARCHAR" />
    <result column="备用字段1" property="备用字段1" jdbcType="VARCHAR" />
    <result column="备用字段2" property="备用字段2" jdbcType="VARCHAR" />
    <result column="备用字段3" property="备用字段3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, 名称, 访问地址, 账号, 密码, 备用字段1, 备用字段2, 备用字段3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.open.yun.ysmsvs.model.AccountExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Byte" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from account
    where id = #{id,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.open.yun.ysmsvs.model.AccountExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.open.yun.ysmsvs.model.Account" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into account (id, 名称, 访问地址, 
      账号, 密码, 备用字段1, 备用字段2, 
      备用字段3)
    values (#{id,jdbcType=TINYINT}, #{名称,jdbcType=VARCHAR}, #{访问地址,jdbcType=VARCHAR}, 
      #{账号,jdbcType=VARCHAR}, #{密码,jdbcType=VARCHAR}, #{备用字段1,jdbcType=VARCHAR}, #{备用字段2,jdbcType=VARCHAR}, 
      #{备用字段3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.open.yun.ysmsvs.model.Account" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="名称 != null" >
        名称,
      </if>
      <if test="访问地址 != null" >
        访问地址,
      </if>
      <if test="账号 != null" >
        账号,
      </if>
      <if test="密码 != null" >
        密码,
      </if>
      <if test="备用字段1 != null" >
        备用字段1,
      </if>
      <if test="备用字段2 != null" >
        备用字段2,
      </if>
      <if test="备用字段3 != null" >
        备用字段3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=TINYINT},
      </if>
      <if test="名称 != null" >
        #{名称,jdbcType=VARCHAR},
      </if>
      <if test="访问地址 != null" >
        #{访问地址,jdbcType=VARCHAR},
      </if>
      <if test="账号 != null" >
        #{账号,jdbcType=VARCHAR},
      </if>
      <if test="密码 != null" >
        #{密码,jdbcType=VARCHAR},
      </if>
      <if test="备用字段1 != null" >
        #{备用字段1,jdbcType=VARCHAR},
      </if>
      <if test="备用字段2 != null" >
        #{备用字段2,jdbcType=VARCHAR},
      </if>
      <if test="备用字段3 != null" >
        #{备用字段3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.open.yun.ysmsvs.model.AccountExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=TINYINT},
      </if>
      <if test="record.名称 != null" >
        名称 = #{record.名称,jdbcType=VARCHAR},
      </if>
      <if test="record.访问地址 != null" >
        访问地址 = #{record.访问地址,jdbcType=VARCHAR},
      </if>
      <if test="record.账号 != null" >
        账号 = #{record.账号,jdbcType=VARCHAR},
      </if>
      <if test="record.密码 != null" >
        密码 = #{record.密码,jdbcType=VARCHAR},
      </if>
      <if test="record.备用字段1 != null" >
        备用字段1 = #{record.备用字段1,jdbcType=VARCHAR},
      </if>
      <if test="record.备用字段2 != null" >
        备用字段2 = #{record.备用字段2,jdbcType=VARCHAR},
      </if>
      <if test="record.备用字段3 != null" >
        备用字段3 = #{record.备用字段3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update account
    set id = #{record.id,jdbcType=TINYINT},
      名称 = #{record.名称,jdbcType=VARCHAR},
      访问地址 = #{record.访问地址,jdbcType=VARCHAR},
      账号 = #{record.账号,jdbcType=VARCHAR},
      密码 = #{record.密码,jdbcType=VARCHAR},
      备用字段1 = #{record.备用字段1,jdbcType=VARCHAR},
      备用字段2 = #{record.备用字段2,jdbcType=VARCHAR},
      备用字段3 = #{record.备用字段3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.open.yun.ysmsvs.model.Account" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update account
    <set >
      <if test="名称 != null" >
        名称 = #{名称,jdbcType=VARCHAR},
      </if>
      <if test="访问地址 != null" >
        访问地址 = #{访问地址,jdbcType=VARCHAR},
      </if>
      <if test="账号 != null" >
        账号 = #{账号,jdbcType=VARCHAR},
      </if>
      <if test="密码 != null" >
        密码 = #{密码,jdbcType=VARCHAR},
      </if>
      <if test="备用字段1 != null" >
        备用字段1 = #{备用字段1,jdbcType=VARCHAR},
      </if>
      <if test="备用字段2 != null" >
        备用字段2 = #{备用字段2,jdbcType=VARCHAR},
      </if>
      <if test="备用字段3 != null" >
        备用字段3 = #{备用字段3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.open.yun.ysmsvs.model.Account" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update account
    set 名称 = #{名称,jdbcType=VARCHAR},
      访问地址 = #{访问地址,jdbcType=VARCHAR},
      账号 = #{账号,jdbcType=VARCHAR},
      密码 = #{密码,jdbcType=VARCHAR},
      备用字段1 = #{备用字段1,jdbcType=VARCHAR},
      备用字段2 = #{备用字段2,jdbcType=VARCHAR},
      备用字段3 = #{备用字段3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=TINYINT}
  </update>
</mapper>